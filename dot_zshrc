# Enable powerlevel10k instant prompt. should stay close to the top of ~/.zshrc.
# initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Fix npm node_modules permissions
npm set prefix ~/.npm; path+=$HOME/.npm/bin; path+=./node_modules/.bin

# Fix n permissions
export N_PREFIX=$HOME/.n
export PATH=$N_PREFIX/bin:$PATH

# NVM stuff
## export NVM_DIR="$HOME/.nvm"
##  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
##  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Font mode for powerlevel10k
# POWERLEVEL9K_MODE="nerdfont-complete"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Prompt settings
# POWERLEVEL9K_PROMPT_ON_NEWLINE=true
# POWERLEVEL9K_RPROMPT_ON_NEWLINE=true
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="\uF155 "

# Separators
# POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=$'\ue0b0'
# POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=$'\ue231'
# POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=$'\ue0b2'
# POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=$'\ue0b7'

# Context
DEFAULT_USER="britton.jenner"
# POWERLEVEL9K_ALWAYS_SHOW_CONTEXT=true
# POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND='green'
# POWERLEVEL9K_CONTEXT_TEMPLATE="%F{cyan}%n%f"
# POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND='black'

# VCS CONFIG
# POWERLEVEL9K_SHOW_CHANGESET=true

# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs)

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
 COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git docker node brew z tmux tmuxinator zsh-syntax-highlighting zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh

#include powerline bindings
# source /usr/local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context ip dir vcs)
# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs time battery)

# include Z, yo
source "$(brew --prefix)/etc/profile.d/z.sh"

#include shell integration
source ~/.iterm2_shell_integration.zsh

#gcloud stuff
source $(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
source $(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc


# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias vimconfig="vim ~/.vimrc"
alias mux="tmuxinator"
alias gitD='git branch --merged | egrep -v "(^\*|master|dev)" | xargs git branch -d'
alias kill-pubsub="ps -eaf | grep 9095 | awk '{print $2}' | xargs sudo kill -9"
alias dockerkill="docker stop $(docker ps -a -q)"

# Pretty git log
alias lg="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"

# story creator
alias start-c="yarn run start:dev"

# DB access
alias dev-tunnel="cloud-sql-proxy -g crowdriff-stories-dev:us-central1:stories -p 5433"
alias prod-tunnel="cloud-sql-proxy -g crowdriff-stories-prod:us-central1:stories-prod -p 5434"
alias es-tunnel-prod="gcloud compute ssh network-stories-elasticsearch-1 --project=crowdriff-stories-prod --zone us-central1-a -- -NL 9200:localhost:9200"
alias es-tunnel-dev="gcloud compute ssh network-stories-elasticsearch --project=crowdriff-stories-dev --zone us-central1-a -- -NL 9200:localhost:9200"
alias gcprod="gcloud config set project crowdriff-stories-prod && gcloud config set compute/region us-central1 && gcloud container clusters get-credentials prod-cluster"
alias gcdev="gcloud config set project crowdriff-stories-dev && gcloud config set compute/region us-central1 && gcloud container clusters get-credentials dev-cluster"
alias gcpprod="gcloud config set project prod-189020 && gcloud config set compute/region us-central1"
alias gcpdev="gcloud config set project derp-187823 && gcloud config set compute/region us-central1"
alias stories-connect-dev="gcloud config set project crowdriff-stories-dev && gcloud config set compute/region us-central1 && gcloud sql connect stories --user=brittonjenner --database=overlord"
alias stories-connect-prod="gcloud config set project crowdriff-stories-prod && gcloud config set compute/region us-central1 && gcloud sql connect stories-prod --user=brittonjenner --database=overlord"
alias challenges-connect-dev="gcloud config set project crowdriff-stories-dev && gcloud config set compute/region us-central1 && gcloud container clusters get-credentials dev-cluster && gcloud sql connect story-challenges-staging --user=brittonjenner --database=story_challenges"
alias challenges-connect-prod="gcloud config set project crowdriff-stories-prod && gcloud config set compute/region us-central1 && gcloud container clusters get-credentials prod-cluster && gcloud sql connect story-challenges --user=brittonjenner --database=story_challenges"
alias staging-challenges-pg="cloud-sql-proxy -g crowdriff-stories-dev:us-central1:story-challenges-staging -p 5435"
alias prod-challenges-pg="cloud-sql-proxy -g crowdriff-stories-prod:us-central1:story-challenges -p 5436"

# make commands
alias dbuild="BUILD_ENV=staging make build"
alias pbuild="BUILD_ENV=prod make build"
alias ddeploy="BUILD_ENV=staging make deploy"
alias pdeploy="BUILD_ENV=prod make deploy"

# docker
alias docker-start-amd="colima start --network-address --profile amd64 -a x86_64 --cpu 4 --memory 4"
alias docker-start-arm="colima start --profile arm64 -c 2 -m 4"
alias docker-stop-amd="colima stop amd64"
alias docker-stop-arm="colima stop arm64"

#npm
alias NPM_TOKEN='eval $(op read op://Private/NPM token/password)'

#
# misc
alias uuidgenlower='uuidgen | tr "[:upper:]" "[:lower:]"'

source $(brew --prefix)/share/powerlevel10k/powerlevel10k.zsh-theme

export EDITOR="vim"

# Golang
# export GOROOT=/opt/homebrew/Cellar/go
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
export GOPRIVATE="github.com/twitsprout"
export GO111MODULE="on" 

# Java
export PATH="$(brew --prefix)/opt/openjdk/bin:$PATH"
export CPPFLAGS="-I/$(brew --prefix)/opt/openjdk/include"

# Node
export N_PRESERVE_NPM=0

# Python
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Python POC
export TMP_FILES_LOCATION="/tmp/video-intelligence/"
export GCS_BUCKET="stories-dev-transcoder"
export GCS_PREFIX="video-intelligence"
export HAWK_URL="https://hawk.derp.website"

eval $(thefuck --alias)

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
#
#
export NPM_TOKEN=op://Private/4r2tbdgnokd6cjhd7zaqwpapau/password
source /Users/britton.jenner/.config/op/plugins.sh
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
export GCP_CREDS=$HOME/auth/

# GPG commit signing
export GPG_TTY=$(tty)

[[ -s "/Users/britton.jenner/.gvm/scripts/gvm" ]] && source "/Users/britton.jenner/.gvm/scripts/gvm"
# Load local customizations
source $HOME/.localzshrc
